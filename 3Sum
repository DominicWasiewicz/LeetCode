//Problem: https://leetcode.com/problems/3sum/

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        
        List<List<Integer>> triplets = new ArrayList<>();
        Arrays.sort(nums);
        
        for(int i = 0; i < nums.length-1; i++){
            
            if(i > 0 && nums[i] == nums[i-1]){
                continue;    
            }
            int left = i+1;
            int right = nums.length-1;
            while(left < right){
                int threeSum = nums[left] + nums[right] + nums[i];
                if(threeSum > 0){
                    right-=1;
                }else if (threeSum < 0){
                    left+=1;
                }else{
                    List<Integer> value = Arrays.asList(nums[left],nums[right], nums[i]);
                    triplets.add(value);
                    left+=1;
                    while(left < right && nums[left] == nums[left-1]){
                        left+=1;
                    }
                }
            }
        
         }
    return triplets;
    }         
}
